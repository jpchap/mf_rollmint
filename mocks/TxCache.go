// Code generated by mockery v2.15.0. DO NOT EDIT.

package mocks

import (
	mock "github.com/stretchr/testify/mock"
	types "github.com/tendermint/tendermint/types"
)

// TxCache is an autogenerated mock type for the TxCache type
type TxCache struct {
	mock.Mock
}

// Has provides a mock function with given fields: tx
func (_m *TxCache) Has(tx types.Tx) bool {
	ret := _m.Called(tx)

	var r0 bool
	if rf, ok := ret.Get(0).(func(types.Tx) bool); ok {
		r0 = rf(tx)
	} else {
		r0 = ret.Get(0).(bool)
	}

	return r0
}

// Push provides a mock function with given fields: tx
func (_m *TxCache) Push(tx types.Tx) bool {
	ret := _m.Called(tx)

	var r0 bool
	if rf, ok := ret.Get(0).(func(types.Tx) bool); ok {
		r0 = rf(tx)
	} else {
		r0 = ret.Get(0).(bool)
	}

	return r0
}

// Remove provides a mock function with given fields: tx
func (_m *TxCache) Remove(tx types.Tx) {
	_m.Called(tx)
}

// Reset provides a mock function with given fields:
func (_m *TxCache) Reset() {
	_m.Called()
}

type mockConstructorTestingTNewTxCache interface {
	mock.TestingT
	Cleanup(func())
}

// NewTxCache creates a new instance of TxCache. It also registers a testing interface on the mock and a cleanup function to assert the mocks expectations.
func NewTxCache(t mockConstructorTestingTNewTxCache) *TxCache {
	mock := &TxCache{}
	mock.Mock.Test(t)

	t.Cleanup(func() { mock.AssertExpectations(t) })

	return mock
}
